+ }
oddcount <- function(x) {
+ k<-0
+ for (n in x) {
+ if (n%%2 == 1); k<- k+1
+ }
+ return(k)
+ }
oddcount <- function(x) {
+ k<-0
+ for (n in x) {
+ if (n%%2 == 1); k<- k+1
+ }
+ return(k)
+ }
oddcount <- function(x) {
k <- 0
for (n in x) {
if (n%%2 == 1) k <- k + 1
}
return(k)
}
oddcount(C(1,3,5,6))
oddcount(c(1,3,5,6))
oddcount(c(1,3,5,6,9,8))
oddcount(c(1,3,5,6,9,8,15))
example(persp)
q()
g <- c("M","F","F","I","M","M","F")
ifelse(g == "M",1,ifelse(g == "F",2,3))
q()
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
q()
swirl()
library(swirl)
rm(list=ls())
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm,color="blue")
boxplot(ppm,col="blue")
abline(h=12)
hist(ppm,col="green")
rug(ppm)
low
high
hist(ppm,col="green", breaks=100)
rug(ppm)
hist(ppm,col="green")
abline(v=12,lwd=2)
abline(v=median(ppm),col="magenta",lwd=4)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg,col="wheat", main="Number of Counties in Each Region")
boxplot(pm25~region,data-pollution,col="red")
boxplot(pm25~region,data=pollution,col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east<-subset(pollution,region=="east")
head(east)
hist(east$pm25,col="green")
hist(subset(pollution,region=="west")$pm25,col="green")
with(pollution,plot(latitude,pm25))
abline(h=12,lwd=2,lty=2)
plot(pollution$latitude,ppm,col=pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow=(c(1,2)),mar=c(5,4,2,1))
par(mfrow=c(1,2),mar=c(5,4,2,1))
west<-subset(pollution,region=="west")
plot(west$latitude,west$pm25,Main="West")
plot(west$latitude,west$pm25,main="West")
plot(east$latitude,east$pm25,main="East")
q()
?Devices
q()
?strptime
as.date("2012-02-26",format="%Y-%m-%d"")
as.date("2012-02-26",format="%Y-%m-%d"")
as.date("2012-02-26",format="%Y-%m-%d")
as.Date("2012-02-26",format="%Y-%m-%d")
as.Date(sysDate,format="%Y-%m-%d")
as.Date(sysDate(),format="%Y-%m-%d")
as.Date(sysdate(),format="%Y-%m-%d")
as.Date(Sys.date(),format="%Y-%m-%d")
?as.Date
as.Date(Sys.Date(),format="%Y-%m-%d")
class("2012-02-26")
class(as.Date("2012-02-26",format="%Y-%m-%d"))
>=?strptime
?strptime
strptime(Sys.time(), format="%H %M %S")
strptime(Sys.time(), "%H %M %S")
Sys.time()
strptime(Sys.time(), "%H:%M:%S")
strptime(Sys.time(), "%H:%M:%OS")
strptime(Sys.time(), "%m/%d/%y %H:%M:%S")
strptime("Sys.time()"22:48:15", "%H:%M:%S")
strptime("22:48:15", "%H:%M:%S")
strptime("22:48:15", "%H %M %S")
strptime("08:48:15", "%H %M %S")
strptime("08:48:15", "%H:%M:%S")
strptime("08:48:15", format="%H:%M:%S")
strptime("08:48:15", format="%H:%M:%S", tz= "")
class(strptime("08:48:15", format="%H:%M:%S"))
str(strptime("08:48:15", format="%H:%M:%S"))
str("08:48:15")
q()
library(swirl)
rm(list=ls())
swirl()
head(cars)
with(cars, plot(speed, dist))
text(mean(car$speed), max(car$dist), "SWIRL rules!")
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, state, c(4,1))
xyplot(Life.Exp ~ Income | region, data=state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data=state, layout = c(2,2))
head(cars)
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, mpg)
qplot(displ, hwy, dataset = mpg)
qplot(displ, hwy, data = mpg)
head(airquality)
range(airquality$ozone, na.rm=TRUE)
range(airquality$Ozone, na.rm=TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone ~ Month, data=airquality)
boxplot(Ozone ~ Month, data=airquality, xlab="Month", ylab = "Ozone (ppb)", col.axis="blue", col.lab = "red")
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par()$fg
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in NYC")
may <- airquality[Month==5,]
may <- airquality[airquality$Month==5,]
may <- subset(airquality, Month==5)
points(may$Wind, may$Ozone, col = "blue", pch = 2)
points(may$Wind, may$Ozone, col = "blue", pch = 17)
notmay <- subset(airquality, Month!=5)
points(notmay$Wind, notmay$Ozone, col = "red", pch = 8)
legend("topright", pch=c(17,8), col=c("blue", "red"), c("May", "Other Months"))
legend("topright", pch=c(17,8), col=c("blue", "red"), legend=c("May", "Other Months"))
abline(v=median(airquality$Wind), lty=2, lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Wind, airquality$Solar.R, main="Ozone and Solar Radiation")
par(mfrow=c(1,3), mar=c(4,4,2,1), oma=c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main="Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main="Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer=TRUE)
q()
library(nlme)
library(lattice)
xyplot(weight ~ time | Diet, BodyWeight)
xyplot(weight ~ Time | Diet, BodyWeight)
head(BodyWeight)
table(BodyWeight$Rat)
table(BodyWeight$Diet)
str(airquality)
airquality <- transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = mpg, facets = .~Month)
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = mpg, facets = .~Month)
qplot(Wind, Ozone, data = airquality, facets = .~Month)
q()
library(swirl)
rm(list=ls())
swirl()
head(airquality)
xyplot(Ozone~Wind, data=airquality)
xyplot(Ozone~Wind, data=airquality, col="red", pch=8, main = "Big Apple Data")
xyplot(Ozone~Wind|as.factor(Month), data=airquality, layout=c(5,1))
xyplot(Ozone~Wind|Month, data=airquality, layout=c(5,1))
p <- xyplot(Ozone~Wind, data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f,layout=c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"), local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local=TRUE)
xyplot(price~carat|color*cut, data=diamonds, strip=FALSE, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
xyplot(price~carat|color*cut, data=diamonds, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
sample(color(),10)
sample(colors(),10)
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1<-colorRampPalette(c"red","blue")
p1<-colorRampPalette(c("red","blue")
)
p1(2)
p1(6)
0xcc
p2<-colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
q
?fun
?rgb
p3 <- colorRampPalette(c("blue", "green"), alpha=.5)
p3(5)
plot(x=x,y=y,pch=119,col=rgb(0,.5,.5))
plot(x=x,y=y,pch=19,col=rgb(0,.5,.5))
plot(x=x,y=y,pch=19,col=rgb(0,.5,.5),alpha=.3)
plot(x=x,y=y,pch=19,col=rgb(0,.5,.5,alpha=.3)
)
cols<-brewer.pal(3,BuGn)
q()
?par
?plot
q()
q()
?ggplot
library(ggplot2)
?ggplot
trunc(Sys.time(), "day")
trunc(Sys.time(), "hours")
trunc(Sys.time(), "mins")
time <- sys.time
time <- sys.time()
time <- Sys.time()
time
time1 <- as.POSIXct(time)
time1
time2 <- as.POSIXlt(time)
time2
time2$hour
time2$min
time2$sec
time$hour
class(time)
str(time)
str(time1)
str(time2)
time3 <- strptime(time)
time3 <- strptime(time, %Y-%m-%d %H:%M:%s)
?strptime
time3 <- strptime(time, %Y-%m-%d %H:%M:%S)
time3 <- strptime(time, "%Y-%m-%d %H:%M:%S")
time3$hour
time3$min
time3$sec
q()
setwd("C:/Users/ksn/RepData_PeerAssessment1")
rawdata <- read.csv("activity.csv")
data1 <- rawdata
data1$date <- as.Date(as.character(data1$date))
avgstepsinterval <- aggregate(steps ~ interval, data = data1, mean)
avgstepsinterval
substr(as.character(avgstepsinterval$interval), 2)
substr(as.character(avgstepsinterval$interval), 2,4)
substr(as.character(avgstepsinterval$interval), 3,4)
length(as.character(avgstepsinterval$interval))
count(as.character(avgstepsinterval$interval))
nchar(as.character(avgstepsinterval$interval))
avgstepsinterval$intstring <- as.character(avgstepsinterval$interval)
avgstepsinterval
str(avgstepsinterval)
avgstepsinterval$intstring <- ifelse(nchar(avgstepsinterval$intstring==1,paste("000", sep="", avgstepsinterval$intstring,avgstepsinterval$intstring)))
avgstepsinterval$intstring <- ifelse(nchar(avgstepsinterval$intstring)==1,paste("000", sep="", avgstepsinterval$intstring),avgstepsinterval$intstring)
avgstepsinterval
avgstepsinterval$intstring <- ifelse(nchar(avgstepsinterval$intstring)==2,paste("00", sep="", avgstepsinterval$intstring),avgstepsinterval$intstring)
avgstepsinterval
avgstepsinterval$intstring <- ifelse(nchar(avgstepsinterval$intstring)==3,paste("0", sep="", avgstepsinterval$intstring),avgstepsinterval$intstring)
avgstepsinterval
avgstepsinterval$intstring <- paste(substr(avgstepsinterval$intstring,1,2),":",substr(avgstepsinterval$intstring,3,4),sep="")
avgstepsinterval
avgstepsinterval$intstring <- strptime(avgstepsinterval$intstring, "%H:%M")
avgstepsinterval
ggplot(avgstepsinterval, aes(x=intstring, y=steps)) + geom_line()
library(ggplot2)
ggplot(avgstepsinterval, aes(x=intstring, y=steps)) + geom_line()
ggplot(avgstepsinterval, aes(x=interval, y=steps)) + geom_line()
ggplot(avgstepsinterval, aes(x=intstring, y=steps)) + geom_line()
?scale_x_date
?date_format
?scale_x_date
ggplot(avgstepsinterval, aes(x=intstring, y=steps)) + geom_line() + scale_x_date(labels=date_format(%H:%M))
ggplot(avgstepsinterval, aes(x=intstring, y=steps)) + geom_line() + scale_x_date(labels=date_format("%H:%M"))
library(scales)
ggplot(avgstepsinterval, aes(x=intstring, y=steps)) + geom_line() + scale_x_date(labels=date_format("%H:%M"))
str(avgstepsinterval)
as <- aggregate(steps ~ interval, data = data1, mean)
as
as$str <- as.character(as$interval)
as
as$str <- ifelse(nchar(as$str)==1,paste("000", sep="", as$str),as$str)
as
as$str <- ifelse(nchar(as$str)==2,paste("00", sep="", as$str),as$str)
as$str <- ifelse(nchar(as$str)==3,paste("000", sep="", as$str),as$str)
as$str <- paste(substr(as$str,1,2),":",substr(as$str,3,4),sep="")
as$str <- as.Date(as$str, "%H:%M")
as
as$str <- as.Date(as$str, "%Y-%m-%d %H:%M")
as
as$str <- strptime(as$str, "%H:%M")
as
as <- aggregate(steps ~ interval, data = data1, mean)
as$str <- as.character(as$interval)
as$str <- ifelse(nchar(as$str)==1,paste("000", sep="", as$str),as$str)
as$str <- ifelse(nchar(as$str)==2,paste("00", sep="", as$str),as$str)
as
as$str <- ifelse(nchar(as$str)==3,paste("0", sep="", as$str),as$str)
as
as$str <- paste(substr(as$str,1,2),":",substr(as$str,3,4),sep="")
as
temp <- as
temp
temp$time <- strptime(temp$str, "%H:%S")
temp
temp$time <- strptime(temp$str, "%H:%M")
temp
?trunc
ggplot(temp, aes(x=time, y=steps)) + geom_line() + scale_x_date(labels=date_format("%S:00))
)
)
)
q
q()
ggplot(temp, aes(x=time, y=steps)) + geom_line() + scale_x_date(labels=date_format("%S:00"))
class(temp$time)
temp$time <- as.POSIXct(temp$time)
class(temp$time)
ggplot(temp, aes(x=time, y=steps)) + geom_line() + scale_x_date(labels=date_format("%S:00"))
class(strptime(Sys.time()))
class(strptime(Sys.time(), "%Y-%m-%d %H:%M:%S"))
str(temp)
temp
?format
temp$time <- formatt(temp$time, format="%H:%M")
temp$time <- format(temp$time, format="%H:%M")
ggplot(temp, aes(x=time, y=steps)) + geom_line()
ggplot(temp, aes(x=time, y=steps), group=1) + geom_line()
ggplot(data=temp, aes(x=time, y=steps), group=1) + geom_line()
ggplot(data=temp, aes(x=time, y=steps, group=1)) + geom_line()
?scale_x_datetime
ggplot(data=temp, aes(x=time, y=steps, group=1)) + geom_line() + scale_x_datetime(breaks = date_breaks("1 hour"))
str(temp)
as
temp <- as
temp$time <- strptime(as.str, "%Y-%m-%d %H:%M")
as
names(as)
temp$time <- strptime(as$str, "%Y-%m-%d %H:%M")
temp
names(temp)
temp <-- as
temp <- as
temp$time <- strptime(as$str, "%H:%M")
head(temp)
str(temp)
temp$time <- as.POSIXct(temp$time)
str(temp)
ggplot(data=temp, aes(x=time, y=steps, group=1)) + geom_line() + scale_x_datetime(breaks = date_breaks("1 hour"))
ggplot(data=temp, aes(x=time, y=steps, group=1)) + geom_line() + scale_x_datetime(breaks = date_breaks("2 hour"))
ggplot(data=temp, aes(x=time, y=steps, group=1)) + geom_line() + scale_x_datetime(breaks = date_breaks("2 hour"), labels = date_format(%H:%M))
ggplot(data=temp, aes(x=time, y=steps, group=1)) + geom_line() + scale_x_datetime(breaks = date_breaks("2 hour"), labels = date_format("%H:%M"))
head(temp)
str(temp)
ggplot(data=temp, aes(x=time, y=steps, group=1)) + geom_line() + scale_x_datetime(labels = date_format("%H:%M"))
ggplot(data=temp, aes(x=time, y=steps, group=1)) + geom_line()
ggplot(data=temp, aes(x=time, y=steps, group=1)) + geom_line() + scale_x_datetime(labels = date_format("%H:%M"))
attributes(temp$time)
ggplot(data=temp, aes(x=time, y=steps, group=1)) + geom_line() + scale_x_datetime(labels = date_format("%H:%M", tz="PDT"))
ggplot(data=temp, aes(x=time, y=steps, group=1)) + geom_line() + scale_x_datetime(labels = date_format("%H:%M", tz="PST"))
ggplot(data=temp, aes(x=time, y=steps, group=1)) + geom_line() + scale_x_datetime(labels = date_format("%H:%M", tz="UTC"))
Sys.timezone()
ggplot(data=temp, aes(x=time, y=steps, group=1)) + geom_line() + scale_x_datetime(labels = date_format("%H:%M", tz=""America/Los_Angeles""))
ggplot(data=temp, aes(x=time, y=steps, group=1)) + geom_line() + scale_x_datetime(labels = date_format("%H:%M", tz="America/Los_Angeles))
""
ggplot(data=temp, aes(x=time, y=steps, group=1)) + geom_line() + scale_x_datetime(labels = date_format("%H:%M", tz="America/Los_Angeles"))
ggplot(data=temp, aes(x=time, y=steps, group=1)) + geom_line() + scale_x_datetime(breaks = date_breaks("2 hour"),labels = date_format("%H:%M", tz="America/Los_Angeles"))
ggplot(data=temp, aes(x=time, y=steps, group=1)) + geom_line() + scale_x_datetime(breaks = date_breaks("1 hour"),labels = date_format("%H:%M", tz="America/Los_Angeles"))
ggplot(data=temp, aes(x=time, y=steps, group=1)) + geom_line() + scale_x_datetime(breaks = date_breaks("2 hour"),labels = date_format("%H:%M", tz="America/Los_Angeles"))
rep("0", 1)
rep("0", 2)
rep("0", 3)
paste(rep("0",2), "55", sep="")
x <- rep("0", 2)
paste(x,"55", sep="")
max(temp$steps)
?which
temp[which(max(temp$steps))]
temp[which(temp$steps == max(temp$steps))]
temp[which(temp$steps == max(temp$steps)),]
temp[which(temp$steps == max(temp$steps)),time]
temp[which(temp$steps == max(temp$steps)),temp$time]
temp[which(temp$steps == max(temp$steps)),]
temp[which(temp$steps == max(temp$steps)),4]
temp[which(temp$steps == max(temp$steps)),temp$time]
temp[which(temp$steps == max(temp$steps)),time]
temp[which(temp$steps == max(temp$steps)),]
temp[time]
temp[temp$time]
temp[,temp$time]
temp[1,2]
temp[1,4]
temp[which(temp$steps == max(temp$steps)),4]
format(temp[which(temp$steps == max(temp$steps)),4], "%H:%M")
rawdata
summary(rawdata)
sum(is.na(rawdata$steps))
head(temp)
a <- if (is.na(rawdata(1,1) {temp[which(temp$interval == rawdata$interval),2] }))
a <- if (is.na(rawdata(1,1)) {temp[which(temp$interval == rawdata$interval),2]}
a <- if (is.na(rawdata(1,1)) {temp[which(temp$interval == rawdata$interval),2]}
is.na(rawdata(1,1))
is.na(rawdata[1,1])
a <- if (is.na(rawdata[1,1]) {temp[which(temp$interval == rawdata$interval),2]}
a <- if (is.na(rawdata[1,1]) {temp[which(temp$interval == rawdata$interval),2]}
a <- if (is.na(rawdata[1,1]) { temp[which(temp$interval == rawdata$interval),2]}
a <- if (is.na(rawdata[1,1])) {temp[which(temp$interval == rawdata$interval),2]}
a
a <- if (is.na(rawdata[1,1])) {temp[which(temp$interval == 0),2]}
a
data2 <- rawdata
data2$steps <- if (is.na(rawdata[1,1])) {temp[which(temp$interval == 0),2]}
head(data2)
which(is.na(rawdata$steps))
rawdata[which(is.na(rawdata$steps)),2]
rawdata[which(is.na(rawdata$steps)),3]
names(rawdata)
names(temp)
rawdata[which(is.na(rawdata$steps)),3]
temp[which(temp$interval == rawdata[which(is.na(rawdata$steps)),3]), 2]
data2 <- rawdata
names(data2)
names(temp)
data3 <- merge(data2, temp, by=interval)
?merge
data3 <- merge(data2, temp, by="interval")
head(data3)
library(plyr)
data3 <- join(data2, temp, by="interval", type="left")
head(data3)
colnames(temp)
colnames(temp)[2] <- "avgstep"
colnames(temp)
data3 <- join(data2, temp, by="interval", type="left")
head(data3)
data3$steps[is.na(data3$steps)] <- data3$avgstep
which(is.na(data3$steps))
head(data3)
tail(data3)
data3
data3$steps[is.na(data3$steps)] <- data3$avgstep
data3 <- join(data2, temp, by="interval", type="left")
data3$steps[is.na(data3$steps)]
which(data3$steps[is.na(data3$steps)])
which(is.na(data3$steps))
names(data3)
data3[which(is.na(data3$steps)),4]
data3$steps[is.na(data3$steps)] <- data3[which(is.na(data3$steps)),4]
head(data3)
head(rawdata)
q()
q()
q()
?weekdays
weekdays(Sys.time)
weekdays(Sys.date)
weekdays(sys.date)
sys.Date()
Sys.Date()
weekdays(Sys.Date())
weekdays(Sys.Date(), TRUE)
weekdays("2015-08-15", TRUE)
weekdays(as.Date("2015-08-15"), TRUE)
weekdays(as.Date("2015-08-16"), TRUE)
weekdays(as.Date("2015-08-12"), TRUE)
weekdays(as.Date("2015-08-11"), TRUE)
weekdays(as.Date("2015-08-10"), TRUE)
ifelse (weekdays(as.Date("2015-08-15"), abbreviate=TRUE) %in% c("Sat", "Sun"), "weekend", "weekday")
ifelse (weekdays(as.Date("2015-08-16"), abbreviate=TRUE) %in% c("Sat", "Sun"), "weekend", "weekday")
ifelse (weekdays(as.Date("2015-08-13"), abbreviate=TRUE) %in% c("Sat", "Sun"), "weekend", "weekday")
q()
q()
q()
